using System.Windows;

namespace Interpritator
{
    /// <summary>
    /// Логика взаимодействия для Help.xaml
    /// </summary>
    public partial class Help : Window
    {
        public Help()
        {
            InitializeComponent();
            Box.Text = @"Shb – вывести состояние всех регистров в системе счисления, которая записана в 1 операнде;
                ! – бинарное отрицание над содержимым 1 операнда, результат сохраняется в 3 операнд;
                || – дизъюнкция над 1 и 2 операндом, результат сохраняется в 3 операнд;
                && – конъюнкция над 1 и 2 операндом, результат сохраняется в 3 операнд;
                Xor – сложение по модулю 2 над 1 и 2 операндом, результат сохраняется в 3 операнд;
                -> – импликация над 1 и 2 операндом, результат сохраняется в 3 операнд;
                <- – коимпликация над 1 и 2 операндом, результат сохраняется в 3 операнд;
                ~ – эквиваленция над 1 и 2 операндом, результат сохраняется в 3 операнд;
                \/ – стрелка Пирса над 1 и 2 операндом, результат сохраняется в 3 операнд;
                /\ – штрих Шеффера над 1 и 2 операндом, результат сохраняется в 3 операнд;
                + – сложение 1 и 2 операнда, результат сохраняется в 3 операнд;
                - – вычитание из 1 операнда 2 операнда, результат сохраняется в 3 операнд;
                * – умножение 1 и 2 операнда, результат сохраняется в 3 операнд;
                / – целочисленное деление 1 операнда на 2 операнд, результат сохраняется в 3 операнд;
                mod – остаток от деления 1 операнда на 2 операнд, результат сохраняется в 3 операнд;
                <-> – обмен содержимого 1 и 2 операндов (операция swap);
                .!.. – занести в 1 операнд в байт с номером, который находится во 2 операнде, байт, значение которое лежит на месте 3 операнда;
                 ~> – вывести содержимое операнда 1 в системе счисления, которая записана месте для второго операнда;
                 ~~> – ввести в операнд 1 в системе счисления, которая записана месте для второго операнда значение с клавиатуры;
                max^p – найти максимальное значение 2𝑝, на которое делится 1 операнд, результат сохраняется в 3 операнд;
                << – сдвиг влево содержимого 1 операнда на количество бит, которое находится во 2-ом операнде, результат сохраняется в 3 операнд;
                >> - сдвиг вправо содержимого 1 операнда на количество бит, которое находится во 2-ом операнде, результат сохраняется в 3 операнд;
                ..<<  – циклический сдвиг влево содержимого 1 операнда на количество бит, которое находится во 2-ом операнде, результат сохраняется в 3 операнд;
                >>.. – циклический сдвиг вправо содержимого 1 операнда на количество бит, которое находится во 2-ом операнде, результат сохраняется в 3 операнд;
                ..->.. – занести в 1 операнд значение, которое стоит на месте 2 операнда.";
        }

        private void ButtonBase_OnClick(object sender, RoutedEventArgs e)
        {
            this.Close();
        }
    }
}
